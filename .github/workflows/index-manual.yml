name: Index (manual)
permissions: {}
on:
  workflow_dispatch:
    inputs:
      namespace:
        description: "Namespace to regenerate"
        required: true
        type: string
      name:
        description: "Name of the provider or module to regenerate"
        required: false
        type: string
        default: ""
      target_system:
        description: "Target system of the module to regenerate"
        required: false
        type: string
        default: ""
      force_regenerate:
        type: string
        required: false
        default: ""
        description: "Force regenerating a namespace, name, or target system. This parameter is a comma-separate list consisting of either a namespace, a namespace and a name separated by a /, or a namespace, name and target system separated by a /. Example: namespace/name/targetsystem,othernamespace/othername"
concurrency:
  group: index
  cancel-in-progress: false
jobs:
  generate:
    name: Run generation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup go
        uses: actions/setup-go@v5
        with:
          go-version-file: 'backend/go.mod'
      - name: Run generation
        working-directory: backend
        env:
          AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY_ID}}
          AWS_ENDPOINT_URL_S3: ${{secrets.AWS_ENDPOINT_URL_S3}}
          AWS_SECRET_ACCESS_KEY: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          S3_BUCKET: ${{secrets.S3_BUCKET}}
          NAMESPACE: ${{inputs.namespace}}
          NAME: ${{inputs.name}}
          TARGET_SYSTEM: ${{inputs.target_system}}
          FORCE_REGENERATE: ${{inputs.force_regenerate}}
        run: |
          go generate ./...
          go run github.com/opentofu/registry-ui/cmd/generate --log-level=trace --s3-bucket=${S3_BUCKET} --blocklist ../blocklist.json --namespace="${NAMESPACE}" --name="${NAME}" --target-system="${TARGET_SYSTEM}" --force-regenerate="${FORCE_REGENERATE}"
